{"version":3,"sources":["components/Attribute.js","components/Character.js","components/App.js","reportWebVitals.js","index.js"],"names":["Attribute","props","attribute","name","Character","RACE_QUERY","gql","sample","array","Math","floor","random","length","data","useQuery","races","classes","randomRace","randomClass","App","className","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAUeA,EARG,SAACC,GACjB,IAAQC,EAAcD,EAAdC,UAER,OACE,+BAAOA,EAAUC,QCkCNC,EApCG,WAChB,IAAMC,EAAaC,cAAH,0HAWVC,EAAS,SAACC,GACd,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,UAGxCC,EAASC,mBAAST,GAAlBQ,KAER,GAAIA,EAAM,CACR,IAAQE,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QACTC,EAAaV,EAAOQ,GACpBG,EAAcX,EAAOS,GAE3B,OACE,oDACqB,cAAC,EAAD,CAAWd,UAAWe,IAD3C,IAC0D,cAAC,EAAD,CAAWf,UAAWgB,IADhF,OAMF,OACE,+CCnBSC,G,kKAXb,WACE,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,Y,GALQC,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCMRQ,EAAWC,yBAAe,CAC9BC,IAAK,oCAGDC,EAAS,IAAIC,eAAa,CAC9BC,KAAML,EACNM,MAAO,IAAIC,kBAGbC,IAASC,OACP,cAAC,iBAAD,CAAgBN,OAAQA,EAAxB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.4297c69f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Attribute = (props) => {\n  const { attribute } = props;\n\n  return (\n    <span>{attribute.name}</span>\n  )\n}\n\nexport default Attribute;\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client';\nimport Attribute from './Attribute'\n\nconst Character = () => {\n  const RACE_QUERY = gql`\n    {\n      races {\n        name\n      }\n      classes {\n        name\n      }\n    }\n  `;\n\n  const sample = (array) => {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  const { data } = useQuery(RACE_QUERY);\n\n  if (data) {\n    const { races, classes } = data\n    const randomRace = sample(races);\n    const randomClass = sample(classes);\n\n    return (\n      <p>\n        You should build a <Attribute attribute={randomRace} /> <Attribute attribute={randomClass} />!\n      </p>\n    )\n\n  } else {\n    return (\n      <p>Crunchatizing</p>\n    )\n  }\n}\n\nexport default Character;\n","import React, { Component } from 'react';\nimport Character from './Character';\nimport './../styles/App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='main'>\n        <div className='content'>\n          <Character />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n} from '@apollo/client'\n\nconst httpLink = createHttpLink({\n  uri: 'https://www.dnd5eapi.co/graphql'\n});\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}